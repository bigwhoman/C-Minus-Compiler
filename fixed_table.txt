Program  ->  Declaration-list

Declaration-list  ->  Declaration Declaration-list  

Declaration-list  ->  '' 

Declaration  ->  Declaration-initial Declaration-prime

Declaration-initial  ->  Type-specifier ID

Declaration-prime  ->  Fun-declaration-prime 

Declaration-prime  ->  Var-declaration-prime

Var-declaration-prime  ->  ;

Var-declaration-prime  ->  [ NUM ] ;

Fun-declaration-prime  ->  ( Params ) Compound-stmt

Type-specifier  ->  int 

Type-specifier  ->  void

Params  ->  int ID Param-prime Param-list

Params  ->  void

Param-list  ->  , Param Param-list

Param-list  ->  ''

Param  ->  Declaration-initial Param-prime

Param-prime  ->  [ ]

Param-prime  ->  ''

Compound-stmt  ->  { Declaration-list Statement-list }

Statement-list  ->  Statement Statement-list

Statement-list  ->  ''

Statement  ->  Expression-stmt 

Statement  ->  Compound-stmt 

Statement  ->  Selection-stmt 

Statement  ->  Iteration-stmt 

Statement  ->  Return-stmt

Expression-stmt  ->  Expression ; 

Expression-stmt  ->  break ; 

Expression-stmt  ->  ;

Selection-stmt  ->  if ( Expression ) Statement Else-stmt

Else-stmt  ->  endif

Else-stmt  ->  else Statement endif

Iteration-stmt  ->  for ( Expression ; Expression ; Expression ) Statement

Return-stmt  ->  return Return-stmt-prime

Return-stmt-prime  ->  ; 
Return-stmt-prime  ->  Expression ;

Expression  ->  Simple-expression-zegond 
Expression  ->  ID B

B  ->  = Expression 
B  ->  [ Expression ] H 
B  ->  Simple-expression-prime

H  ->  = Expression 
H  ->  G D C

Simple-expression-zegond  ->  Additive-expression-zegond C

Simple-expression-prime  ->  Additive-expression-prime C

C  ->  Relop Additive-expression 
C  ->  ''

Relop  ->  < 
Relop  ->  ==

Additive-expression  ->  Term D

Additive-expression-prime  ->  Term-prime D

Additive-expression-zegond  ->  Term-zegond D

D  ->  Addop Term D 
D  ->  ''

Addop  ->  + 
Addop  ->  -

Term  ->  Signed-factor G

Term-prime  ->  Signed-factor-prime G

Term-zegond  ->  Signed-factor-zegond G

G  ->  * Signed-factor G 
G  ->  ''

Signed-factor  ->  + Factor 
Signed-factor  ->  - Factor 
Signed-factor  ->  Factor

Signed-factor-prime  ->  Factor-prime

Signed-factor-zegond  ->  + Factor 
Signed-factor-zegond  ->  - Factor 
Signed-factor-zegond  ->  Factor-zegond

Factor  ->  ( Expression ) 
Factor  ->  ID Var-call-prime 
Factor  ->  NUM

Var-call-prime  ->  ( Args ) 
Var-call-prime  ->  Var-prime

Var-prime  ->  [ Expression ] 
Var-prime  ->  ''

Factor-prime  ->  ( Args ) 
Factor-prime  ->  ''

Factor-zegond  ->  ( Expression ) 
Factor-zegond  ->  NUM

Args  ->  Arg-list 
Args  ->  ''

Arg-list  ->  Expression Arg-list-prime

Arg-list-prime  ->  , Expression Arg-list-prime 
Arg-list-prime  ->  ''
